----={EX - Query con GROUP BY}=----

	1. Contare quanti iscritti ci sono stati ogni anno

		SELECT COUNT(*) AS `students`, YEAR(`enrolment_date`) as `year`
		FROM `students`
		GROUP BY `year`;



	2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

		SELECT COUNT(*) AS `num_teachers`, `office_address`
		FROM `teachers`
		GROUP BY `office_address`;



	3. Calcolare la media dei voti di ogni appello d'esame

		SELECT ROUND(AVG(`vote`)) as `average_exams`, `exam_id`
		FROM `exam_student`
		GROUP BY `exam_id`;



	4. Contare quanti corsi di laurea ci sono per ogni dipartimento

		SELECT COUNT(*) as `num_degrees`, `department_id`
		FROM `degrees`
		GROUP BY `department_id`;



----={EX - Query con JOIN}=----

	1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

		SELECT `students`.*
		FROM `students`
		JOIN `degrees` ON `students`.`degree_id` = `degrees`.`id`
		WHERE `degrees`.`name` = 'Corso di Laurea in Economia';



	2. Selezionare tutti i Corsi di Laurea del Dipartimento di Neuroscienze

		SELECT `degrees`.*
		FROM `degrees`
		JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
		WHERE `departments`.`name` = 'Dipartimento di Neuroscienze';



	3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

		Versione "light":
			SELECT `courses`.*
			FROM `courses`
			JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id`
			WHERE `course_teacher`.`teacher_id` = 44;

		Versione "completa", che permette di cercare anche tramite altri campi dell'insegnante.
			SELECT `courses`.*
			FROM `courses`
			JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id`
			JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`
			WHERE `teachers`.`id` = 44;



	4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome

		SELECT `students`.`name`, `students`.`surname`, `students`.`id` , `degrees`.`name`, `degrees`.`level`, `departments`.`name`
		FROM `students`
		JOIN `degrees` ON `students`.`degree_id` = `degrees`.`id`
		JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
		ORDER BY `students`.`surname`, `students`.`name`;



	5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

		SELECT `degrees`.*, `courses`.name AS `course_name`, `courses`.`id` AS `course_id`, `teachers`.`name` AS `teacher_name`, `teachers`.`surname` AS `teacher_surname`, `teachers`.`id` AS `teacher_id`
		FROM `degrees`
		JOIN `courses` ON `degrees`.`id` = `courses`.`degree_id`
		JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id`
		JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`
		ORDER BY `degrees`.`name`;					
		
		/* Si utilizza ORDER BY solo per una maggiore leggibilità, non è necessaria per la selezione richiesta. */



	6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

		SELECT DISTINCT `teachers`.*
		FROM `teachers`
		JOIN `course_teacher` ON `teachers`.`id` = `course_teacher`.`teacher_id`
		JOIN `courses` ON `course_teacher`.`course_id` = `courses`.`id`
		JOIN `degrees` ON `courses`.`degree_id` = `degrees`.`id`
		JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
		WHERE `departments`.`name` = 'Dipartimento di Matematica'



	7. BONUS: Selezionare per ogni studente quanti tentativi d’esame ha sostenuto per superare ciascuno dei suoi esami

		/*------- SBAGLIATO -------*/
		SELECT `student_id`, COUNT(`student_id`) as `exam_attempts`
		FROM `exam_student`
		GROUP BY `student_id`

		SELECT `students`.`surname`, `students`.`name`, `courses`.`name`, COUNT(`exam_student`.`vote`) AS `attempts`, MAX(`exam_student`.`vote`) AS `max_grade`
		FROM `students`
		JOIN `exam_student` ON `exam_student`.`student_id` = `students`.`id`
		JOIN `exams` ON `exams`.`id` = `exam_student`.`exam_id`
		JOIN `courses` ON `courses`.`id` = `exams`.`course_id`
		GROUP BY `students`.`id`, `courses`.`id`
		HAVING `max_grade` >= 18